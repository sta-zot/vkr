version: '3.9'

services:
  redis:
    image: redis:7
    container_name: superset_redis
    networks:
      - inner
    restart: unless-stopped

  superset-db:
    image: postgres:17
    container_name: superset_db
    environment:
      - POSTGRES_DB=superset
      - POSTGRES_USER=superset
      - POSTGRES_PASSWORD=superset
    volumes:
      - superset_db_data:/var/lib/postgresql/data
    networks:
      - inner
    restart: unless-stopped

  superset:
    image: apache/superset:latest
    container_name: superset
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    depends_on:
      - superset-db
      - redis
    # ports:  # Раскомментируйте для прямого доступа при настройке; уберите в продакшене
    #   - "8088:8088"
    volumes:
      - superset_home:/app/superset_home
      - ./superset_config.py:/app/pythonpath/superset_config.py
    networks:
      - inner
    restart: unless-stopped

  superset-init:
    image: apache/superset:latest
    container_name: superset_init
    command: >
      /bin/sh -c "
        /app/docker/docker-init.sh &&
        superset fab create-admin --username admin --firstname Superset --lastname Admin --email admin@superset.com --password admin &&
        superset init
      "
    depends_on:
      - superset-db
      - redis
    user: "root"
    volumes:
      - superset_home:/app/superset_home
      - ./superset_config.py:/app/pythonpath/superset_config.py
    networks:
      - inner
    healthcheck:
      disable: true

  superset-worker:
    image: apache/superset:latest
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    depends_on:
      - superset-db
      - redis
    user: "root"
    volumes:
      - superset_home:/app/superset_home
      - ./superset_config.py:/app/pythonpath/superset_config.py
    networks:
      - inner
    restart: unless-stopped

  superset-worker-beat:
    image: apache/superset:latest
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    depends_on:
      - superset-db
      - redis
    user: "root"
    volumes:
      - superset_home:/app/superset_home
      - ./superset_config.py:/app/pythonpath/superset_config.py
    networks:
      - inner
    restart: unless-stopped

  web_proxy:
    image: nginx:latest
    container_name: web_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx/conf.d:/etc/nginx/conf.d
      - ./certs/nginx/certs:/etc/nginx/certs
      - ./logs/nginx/logs:/var/log/nginx
    depends_on:
      - superset
    networks:
      - webnet
      - inner
    restart: unless-stopped

  db:
    image: postgres:17
    container_name: dwh
    environment:
      - POSTGRES_DB=dwh
      - POSTGRES_USER=dwh
      - POSTGRES_PASSWORD=dwhpassword
    ports:
      - "5432:5432"
    volumes:
      - dwh_db_data:/var/lib/postgresql/data
    networks:
      - webnet
      - inner
    restart: unless-stopped

  mongo:
    image: mongo:7
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - inner
    restart: unless-stopped

  minio:
    image: minio/minio:latest  # Обновлено до latest; используйте конкретный тег при необходимости
    container_name: minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Консоль
    volumes:
      - minio_data:/data
    networks:
      - inner
    restart: unless-stopped

networks:
  webnet:
    driver: bridge
  inner:
    internal: true

volumes:
  superset_db_data:
  superset_home:
  dwh_db_data:
  mongo_data:
  minio_data: